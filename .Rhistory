library(tidyverse)
library(plotly)
library(readr)
library(ggplot2)
library(dplyr)
library(tidyr)
options(tibble.print_max = Inf)
rideshare <- read_csv("/Users/sabarish/Desktop/rideshare_kaggle.csv")
rideshare <- read_csv("D:/Courses/Statistics for Business Analytics STAT 232/Final project/rideshare_kaggle.csv")
rideshare_unique <-  na.omit(rideshare)
rideshare_unique %>% distinct()
print(paste("Removed", nrow(rideshare) - nrow(rideshare_unique), " rows"))
str(rideshare_unique)
rideshare_unique %>% group_by(cab_type) %>%
summarise(count = length(id),
'%' = (length(id) / nrow(rideshare_unique)) * 100)
ggplot(rideshare_unique, aes(cab_type, fill=cab_type)) +
geom_bar() +
labs(x="Uber Vs Lyft", title="Uber Vs Lyft distribution")
rideshare_unique %>% group_by(hour) %>%
summarise(count = length(id),
'%' = (length(id) / nrow(rideshare_unique)) * 100)
rideshare_unique %>%
ggplot(aes(hour, fill=cab_type)) +
labs(x="Starting hour", title="rides by hour of the day") +
geom_bar()+
facet_wrap(~cab_type)
rideshare_unique %>% group_by(day) %>%
summarise(count = length(id),
'%' = (length(id) / nrow(rideshare_unique)) * 100)
rideshare_unique %>% group_by(source) %>%
summarise(count = length(id),
'%' = (length(id) / nrow(rideshare_unique)) * 100)
rideshare_unique %>%
ggplot(aes(source, fill=cab_type)) +
labs(x="pickup point", title="rides by pickup points(source)") +
geom_bar()+
coord_flip()
rideshare_unique %>% group_by(destination) %>%
summarise(count = length(id),
'%' = (length(id) / nrow(rideshare_unique)) * 100)
rideshare_unique %>%
ggplot(aes(destination, fill=cab_type)) +
labs(x="destination", title="rides by destination") +
geom_bar()+
coord_flip()
rideshare_unique %>% group_by(source,destination)%>%
summarise(mean = mean(price))%>%
print(n=Inf)
rideshare_unique %>%
summarise(min=min(price),
max=max(price))
rideshare_unique %>% group_by(short_summary) %>%
summarise(count = length(id),
'%' = (length(id) / nrow(rideshare_unique)) * 100)
rideshare_unique %>%
ggplot(aes(short_summary, fill=cab_type)) +
labs(x="weather", title="rides by weather") +
geom_bar()+
coord_flip()
library(ggplot2)
library(plotly)
#install.packages("leaflet")
#library(leaflet)
library(ggmap)
library(ggmap)
library(dplyr)
library(tidyr)
library(randomForest)
install.packages("randomForest")
library(ggplot2)
library(plotly)
install.packages("leaflet")
#library(leaflet)
library(ggmap)
library(ggmap)
library(dplyr)
library(tidyr)
library(randomForest)
install.packages("tree")
library(tree)
library(caret)
library(dplyr)
library(ggplot2)
data_month_counts <- rideshare %>%
group_by(month) %>%
summarise(counts = n())
# Create bar plot using ggplot2
ggplot(data_month_counts, aes(x = month, y = counts)) +
geom_bar(stat = "identity", fill = "dodgerblue") +
labs(title = "Month Counts", x = "Month", y = "Count")
data_day_counts <- rideshare %>%
group_by(day) %>%
summarise(counts = n())
ggplot(data_day_counts, aes(x = day, y = counts)) +
geom_bar(stat = "identity", fill = "dodgerblue") +
labs(title = "Day Counts", x = "Day", y = "Count")
data_hour_counts <- rideshare %>%
group_by(hour) %>%
summarise(counts = n())
# Create bar plot using ggplot2
ggplot(data_hour_counts, aes(x = hour, y = counts)) +
geom_bar(stat = "identity", fill = "dodgerblue") +
labs(title = "Hour Counts", x = "Hour", y = "Count")
df <- rideshare%>%
group_by(day, cab_type) %>%
summarise(counts = n())
# Create grouped bar plot using plotly
plot_ly(df, x = ~day, y = ~counts, color = ~cab_type, type = "bar", barmode = "group") %>%
layout(title = "Cab Type Counts by Day", xaxis = list(title = "Day"), yaxis = list(title = "Count"))
df <- rideshare %>%
filter(hour >= 22 | hour <= 4)
ggplot(data = df, aes(x = distance, y = price, color = cab_type, size = surge_multiplier)) +
geom_point() +
labs(title = "Price vs. Distance during Late-Night Hours",
x = "Distance", y = "Price") +
theme_bw()
